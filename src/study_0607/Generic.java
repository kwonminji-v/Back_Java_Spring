package study_0607;

public class Generic {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}

/*
자바에서 "제네릭"은 다양한 타입의 객체를 다루는 메서드나 컬렉션 클래스에 컴파일 시 타입 체크를 해주는 기능입니다.
제네릭을 사용하면, 클래스나 메서드 내부에서 사용할 데이터 타입을 외부에서 지정할 수 있게 되어, 코드의 재 사용성을 높이고 타입 안정성을 확보

 List<String> list = new ArrayList<String>();
 
 list 변수에는 Stirng 객체만 추가할 수 있으며, 다른 타입의 객체를 추가하려고 하면 컴파일 오류발생
 제네릭을 사용하면 프로그램의 타입 안정성을 보장
 
 < > 다이아몬드 연산자
 배열은 고정된 크기의 동일한 타입의 요소들을 저장할 수 있습니다.
 제네릭은 크기가 동적으로 변하는 컬렉션 (예 : ArrayList, LinkedList 등)에 사용되며, 다양한 타입의 객체를 저장하고 처리할 수 있습니다.
 컬렉션은 객체를 저장하므로, 기본 데이터 타입은 사용할 수 없고 대신에 래퍼 클래스(Integer, Double, Character 등)를 사용해야 합니다.
 
 ---필요에 따라 배열과 제네릭을 혼합하여 사용하면 됩니다.
 특정 타입만 다루지 않고, 여러 종류의 타입으로 변신할 수 있도록 클래스나 메소드를 일반화 시키는 기법 <E>, <K>, <V> : 타입 매개변수
 
 
 */