리다이렉트가 필요한 이유
Redirect
  (1) 페이지 강제 이동 명령, URL이 변경 됨 (반대 개념이 Dispatch 또는 Forward)
  (2) sendRedirect()는 웹 페이지를 다른 위치로 강제로 이동 시킨다
  (3) 만일 로그인에 실패했다면 로그인 실패를 알리는 페이지로 이동시키는데 많이 사용된다
  (4) 이와 같은 로그인 처리를 하기 위해서는 로그인 성공 실패에 따라 
      서로 다른 페이지로 이동해야 하기 때문에 Redirect 기능을 사용해야 한다
  (5) 웹 사이트를 구축하기 위해서 웹 페이지에서 웹 페이지로 이동하도록 하는 것은 필수이다
  (6) JSP에서 다른 페이지로 이동하기 위한 방법은 다음과 같은 두가지가 있다
	- Redirect 방식
	- Forward(Dispatch) 방식
Redirect 방식
  (1) response 객체의 sendRedirect()로 페이지를 이동하는 방법을 말한다
  (2) 브라우저의 URL을 변경하도록 하여 페이지를 이동하는 방식으로 
      request와 response 객체가 유지되지 않는다
  (3) 서버가 클라이언트에게 요청할 주소를 응답결과로 전달하는 것을 의미한다
  (4) 클라이언트는 응답결과로 받은 요청주소를 직접 요청하게 된다
  (5) 브라우저가 요청하는 것이므로 주소창의 주소는 변경된다
  (6) Redirect는 새로운 요청이 발생하는 것이므로 HttpServletRequest 객체는 소멸 후 
      새롭게 생성되며 HttpSession 객체는 그대로 유지된다

리다이렉트는 사용하기 나름이지만 네이버 카페를 예로 들어 보겠습니다.
카페마다 다르겠지만 특정 네이버 카페의 글들은 네이버 회원이라고 하더라도 해당 카페에 
가입되어 있거나 혹은 카페에 가입되어 있다고 하더라고 특정 등급이 되어야 
열람할 수 있는 글들이 있습니다.
만약 해당 글의 URL을 알아내어 브라우저의 주소창에 입력한 후 접근한다고 했을때 
권한이 없다면 글에 대한 내용을 웹서버가 응답하면 안될 것입니다. 
이때 웹서버는 글에 접근하는 요청마다 권한을 검사하고 권한이 되지 않는 경우 권한을 확인하세요 
라는 경고 문구가 뜨는 페이지나 혹은 네이버 계정이 로그인 되어 있지 않은 상태라면 
로그인 페이지로 리다이렉트 시킬 필요가 있습니다.

다시 지시하세요 다른 주소로 다시 요청하세요 다른 길을 지시할 수 있다
Redirect는 Web Container로 명령이 들어오면, 
웹 브라우저에게 다른 페이지로 이동하라고 명령을 내립니다. 
그러면 웹 브라우저는 URL을 지시된 주소로 바꾸고 해당 주소로 이동합니다. 
다른 웹 컨테이너에 있는 주소로 이동하며 새로운 페이지에서는 
Request와 Response객체가 새롭게 생성됩니다.
시스템에 변화가 생기는 요청(회원가입, 글쓰기 등)의 경우에는 
redirection을 사용하는 것이 바람직합니다
