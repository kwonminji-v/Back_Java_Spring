AOP 기능 구현 과정
1. 타깃(Target) 클래스를 지정
2. 어드바이스(Advice) 클래스를 지정
3. 설정 파일에서 포인트 컷(Pointcut)을 설정
4. 설정 파일에서 어드바이스와 포인트 컷을 결합하는 어드바이저를 설정
5. 설정 파일에서 스프링의 ProxyFactoryBean 클래스를 이용해 타깃에 어드바이스를 설정
6. getBean() 메서드로 빈 객체에 접근해 사용

Aspect 또는 Advisor 구현하고자 하는 보조 기능을 의미합니다.
advice : aspect의 실제 구현체(클래스)를 의미합니다.
	메서드 호출을 기준으로 여러 지점에서 실행됩니다.
joinpoint : advice를 적용하는 지점을 의미합니다. 스프링은 method 결합점만 제공합니다.
pointcut advice가 적용되는 대상을 지정합니다.
	 패키지 이름/클래스이름/메서드이름을 정규식으로 지정하여 사용합니다.
target : advice가 적용되는 클래스를 의미합니다.
weaving : advice를 주기능에 적용하는 것을 의미합니다.


스프링 폼 태그
스프링 웹 MVC와 연동되는 태그 라이브러리 
스프링 폼 태그를 사용하는 경우 폼에서 전달되는 파라미터 이름으로 Setter() 메서드를 작성한 클래스의 프로퍼티(필드 이름)에 접근 가능
컨트롤러가 다루는 데이터를 참조할 수 있어 동적 웹 애플리케이션을 더 쉽고 편리하게 개발하고 유지 가능
스프링 폼 태그를 사용하려면 뷰 페이지 위쪽에 스프링 폼 태그 라이브러리를 선언해야 합니다.

@ModelAttribute("title") 에서 "title"은 모델에 추가되는 속성의 이름입니다.
@ModelAttribute 유형이 "title"이라는 이름으로 모델에 추가됩니다. 이름을 명시적으로 지정이 가능합니다.
model.addAttribute("subtitle", "메서드에 어노테이션 적용하기") : model에 subtitle이라는 속성 이름으로 값은 메서드에 어노테이션 적용하기로 설정합니다.
@ModelAttribute 어노테이션을 사용할 때 속성의 이름을 명시적으로 지정하지 않았을 경우, 메서드의 이름이 기본적으로 속성의 이름으로 사용
메서드의 이름은 소문자로 시작, 첫 글자를 제외한 글자는 카멜표기법을 따릅니다.


<%@ page language="java" contentType="text/html; charset=utf-8"
    pageEncoding="utf-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Form Tag</title>
</head>
<body>

	<h2>${title}</h2>
	<h4>${subtitle}</h4>

</body>
</html>